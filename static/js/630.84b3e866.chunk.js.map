{"version":3,"file":"static/js/630.84b3e866.chunk.js","mappings":"4TAEMA,EAAM,mCACNC,EAAW,gCAEV,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,+GAEmBC,IAAAA,IAAA,UACjBF,EADiB,sCACqBD,IAHxC,cAEGI,EAFH,OAMGC,EAAeD,EAAQE,KAAKC,QAAQC,KAAI,SAAAC,GAC5C,MAAO,CACLC,GAAID,EAAEC,GACNC,UAAWF,EAAEG,mBATd,kBAYIP,GAZJ,gCAcHQ,QAAQC,MAAR,MAdG,gFAiBA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,kGAEmBb,IAAAA,IAAA,UACjBF,EADiB,gCACeD,EADf,iCAC2CgB,EAD3C,+BAFnB,cAEGZ,EAFH,OAKGC,EAAeD,EAAQE,KAAKC,QAAQC,KAAI,SAAAC,GAC5C,MAAO,CACLC,GAAID,EAAEC,GACNC,UAAWF,EAAEG,mBARd,kBAWIP,GAXJ,gCAaHQ,QAAQC,MAAR,MAbG,gFAiBA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,kGAEmBf,IAAAA,IAAA,UACjBF,EADiB,iBACAiB,EADA,oBACmBlB,EADnB,oBAFnB,cAEGI,EAFH,OAKGC,EAAe,CAACD,EAAQE,MAAME,KAAI,SAAAC,GACtC,MAAO,CACLU,OAAO,mCAAD,OAAqCV,EAAEW,aAC7CC,IAAKZ,EAAEa,QACPX,UAAWF,EAAEG,eACbW,UAA4B,GAAjBd,EAAEe,aACbC,SAAUhB,EAAEgB,SACZC,OAAQjB,EAAEiB,OAAOlB,KAAI,SAAAmB,GAAE,OAAIA,EAAGC,YAZ/B,kBAeIvB,GAfJ,gCAiBHQ,QAAQC,MAAR,MAjBG,gFAqBA,SAAee,EAAtB,+CAAO,OAAP,oBAAO,WAA+BX,GAA/B,kGAEmBf,IAAAA,IAAA,UACjBF,EADiB,iBACAiB,EADA,4BAC2BlB,EAD3B,oBAFnB,cAEGI,EAFH,OAMGC,EAAeD,EAAQE,KAAKwB,KAAKtB,KAAI,SAAAC,GACzC,MAAO,CACLsB,OAAQtB,EAAEuB,QACVJ,KAAMnB,EAAEwB,cACRC,UAAWzB,EAAEyB,UACbC,MAAM,mCAAD,OAAqC1B,EAAE2B,kBAX7C,kBAcI/B,GAdJ,gCAgBHQ,QAAQC,MAAR,MAhBG,gFAoBA,SAAeuB,EAAtB,+CAAO,OAAP,oBAAO,WAA+BnB,GAA/B,kGAEmBf,IAAAA,IAAA,UACjBF,EADiB,iBACAiB,EADA,4BAC2BlB,EAD3B,2BAFnB,cAEGI,EAFH,OAKGC,EAAeD,EAAQE,KAAKC,QAAQC,KAAI,SAAAC,GAC5C,MAAO,CACL6B,MAAO7B,EAAEC,GACT6B,OAAQ9B,EAAE8B,OACVC,OAAQ/B,EAAEgC,YATX,kBAYIpC,GAZJ,gCAcHQ,QAAQC,MAAR,MAdG,kF,6GC/EP,EAAwB,2B,SCGT,SAAS4B,EAAT,GAAgC,IAATC,EAAQ,EAARA,KACpC,OAAO,eAAIC,UAAWC,EAAf,SAAyBF,I,cCAnB,SAASG,IACtB,OAA4BC,EAAAA,EAAAA,YAA5B,eAAOC,EAAP,KAAeC,EAAf,KAEMC,GAAWC,EAAAA,EAAAA,MAMjB,OAJAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,KAA0BC,KAAKL,KAC9B,KAGD,iCACE,SAACP,EAAD,CAAaC,KAAK,mBAEjBK,IACC,+BACE,wBACGA,EAAOxC,KAAI,SAAAC,GAAC,OACX,yBACE,SAAC,KAAD,CACE8C,GAAI,CAAEC,SAAS,WAAD,OAAa/C,EAAEC,KAC7B+C,MAAO,CAAEC,KAAMR,EAASM,UAF1B,SAIG/C,EAAEE,aALEF,EAAEC","sources":["Services/Movies-api.js","webpack://react-homework-template/./src/components/PageHeading/PageHeading.module.css?b132","components/PageHeading/PageHeading.js","Views/homePage/HomePage.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst KEY = 'd3cefc83be12e2f78adc124a4a97fa4a';\r\nconst BASE_URL = 'https://api.themoviedb.org/3/';\r\n\r\nexport async function getTrending() {\r\n  try {\r\n    const request = await axios.get(\r\n      `${BASE_URL}trending/movie/day?api_key=${KEY}`\r\n    );\r\n\r\n    const clearRequest = request.data.results.map(e => {\r\n      return {\r\n        id: e.id,\r\n        movieName: e.original_title,\r\n      };\r\n    });\r\n    return clearRequest;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n}\r\nexport async function searchMovies(query) {\r\n  try {\r\n    const request = await axios.get(\r\n      `${BASE_URL}search/movie?api_key=${KEY}&language=en-US&query=${query}&page=1&include_adult=true`\r\n    );\r\n    const clearRequest = request.data.results.map(e => {\r\n      return {\r\n        id: e.id,\r\n        movieName: e.original_title,\r\n      };\r\n    });\r\n    return clearRequest;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n}\r\n\r\nexport async function getMmovieDetails(movieId) {\r\n  try {\r\n    const request = await axios.get(\r\n      `${BASE_URL}movie/${movieId}?api_key=${KEY}&language=en-US`\r\n    );\r\n    const clearRequest = [request.data].map(e => {\r\n      return {\r\n        poster: `https://image.tmdb.org/t/p/w500/${e.poster_path}`,\r\n        tag: e.tagline,\r\n        movieName: e.original_title,\r\n        userScore: e.vote_average * 10,\r\n        overview: e.overview,\r\n        genres: e.genres.map(el => el.name),\r\n      };\r\n    });\r\n    return clearRequest;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n}\r\n\r\nexport async function getMovieCredits(movieId) {\r\n  try {\r\n    const request = await axios.get(\r\n      `${BASE_URL}movie/${movieId}/credits?api_key=${KEY}&language=en-US`\r\n    );\r\n\r\n    const clearRequest = request.data.cast.map(e => {\r\n      return {\r\n        castId: e.cast_id,\r\n        name: e.original_name,\r\n        character: e.character,\r\n        photo: `https://image.tmdb.org/t/p/w500/${e.profile_path}`,\r\n      };\r\n    });\r\n    return clearRequest;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n}\r\n\r\nexport async function getMovieReviews(movieId) {\r\n  try {\r\n    const request = await axios.get(\r\n      `${BASE_URL}movie/${movieId}/reviews?api_key=${KEY}&language=en-US&page=1`\r\n    );\r\n    const clearRequest = request.data.results.map(e => {\r\n      return {\r\n        revId: e.id,\r\n        author: e.author,\r\n        review: e.content,\r\n      };\r\n    });\r\n    return clearRequest;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"PageHeading_title__AnkIn\"};","import PropTypes from 'prop-types';\r\n\r\nimport s from './PageHeading.module.css';\r\n\r\nexport default function PageHeading({ text }) {\r\n  return <h1 className={s.title}>{text}</h1>;\r\n}\r\n\r\nPageHeading.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n};\r\n","import { useState, useEffect } from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport PageHeading from 'components/PageHeading';\r\nimport * as homePageAPI from 'Services/Movies-api';\r\n\r\nexport default function HomePage() {\r\n  const [movies, setMovies] = useState();\r\n\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    homePageAPI.getTrending().then(setMovies);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <PageHeading text=\"Trending today\" />\r\n\r\n      {movies && (\r\n        <>\r\n          <ul>\r\n            {movies.map(e => (\r\n              <li key={e.id}>\r\n                <Link\r\n                  to={{ pathname: `/movies/${e.id}` }}\r\n                  state={{ from: location.pathname }}\r\n                >\r\n                  {e.movieName}\r\n                </Link>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n"],"names":["KEY","BASE_URL","getTrending","axios","request","clearRequest","data","results","map","e","id","movieName","original_title","console","error","searchMovies","query","getMmovieDetails","movieId","poster","poster_path","tag","tagline","userScore","vote_average","overview","genres","el","name","getMovieCredits","cast","castId","cast_id","original_name","character","photo","profile_path","getMovieReviews","revId","author","review","content","PageHeading","text","className","s","HomePage","useState","movies","setMovies","location","useLocation","useEffect","homePageAPI","then","to","pathname","state","from"],"sourceRoot":""}